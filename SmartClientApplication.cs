//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by this guidance package as part of the solution template
//
// The SmartClientApplication class provides a placeholder to add global services and builder strategies
// for the application.
// 
//  
//
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System.Windows.Forms;

using Microsoft.Practices.CompositeUI;
using Microsoft.Practices.CompositeUI.Services;
using Microsoft.Practices.CompositeUI.WinForms;

using Sonova.Tcs.Infrastructure.Interface.Services;
using Sonova.Tcs.Infrastructure.Library.Services;

namespace Sonova.Tcs.Infrastructure.Library
{
    public abstract class SmartClientApplication<TWorkItem, TShell> : FormShellApplication<TWorkItem, TShell>
        where TWorkItem : WorkItem, new()
        where TShell : Form
    {
        protected string ProfileCatalogFileName { get; set; }

        protected override void AddServices()
        {
            base.AddServices();

            // use custom Profile Catalog
            ProfileCatalogModuleInfoStore infoStore = RootWorkItem.Services.AddNew<ProfileCatalogModuleInfoStory, IMo>();
            if (ProfileCatalogFileName != null)
            {
                infoStore.CatalogFilePath = ProfileCatalogFileName;
            }

            RootWorkItem.Services.AddNew<WorkspaceLocatorService, IWorkspaceLocatorService>();
            RootWorkItem.Services.Remove<IModuleEnumerator>();
            RootWorkItem.Services.AddNew<XmlStreamDependentModuleEnumerator, IModuleEnumerator>();;
            RootWorkItem.Services.AddNew<DependentModuleLoaderService, IModuleLoaderService>();
            RootWorkItem.Services.AddOnDemand<ActionCatalogService, IActionCatalogService>();
            RootWorkItem.Services.AddOnDemand<EntityTranslatorService, IEntityTranslatorService>();
        }
    }
}